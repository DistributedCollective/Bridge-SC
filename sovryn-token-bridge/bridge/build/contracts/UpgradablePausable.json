{
  "contractName": "UpgradablePausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. * This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract in unpaused state. Assigns the Pauser role to the deployer.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/lifecycle/UpgradablePausable.sol\":\"UpgradablePausable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/access/Roles.sol\":{\"keccak256\":\"0xb6878bbcd647f67aefd57b776335439bffeb6d1f3ab04cfbc9b3a9fbcd8b5ebd\",\"urls\":[\"bzz-raw://439ea6f09ac0106b2e173ac7bd893fa66536bcd39daeacd30cc76a942327c887\",\"dweb:/ipfs/QmSwdDfwsnvQrKsMMJRL7mc7sPuUvhAbMCz9DANBHceDva\"]},\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/Initializable.sol\":{\"keccak256\":\"0x8e002f36195e86bd3ed7ec19b270257c081e86e2d4f65309b9b49cdb59dd8d11\",\"urls\":[\"bzz-raw://7bbf782c31b31820de7e30704df854763e9fbc72afcb58dbd342e02b285ee27b\",\"dweb:/ipfs/QmfBczJTggNNVUzj8GGj6ZTg7x8vcrH5vGhkg2mBqPjsE4\"]},\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/access/roles/UpgradablePauserRole.sol\":{\"keccak256\":\"0x1b0e1d166acf1f8700ddeb75d903a64b5dc66b380c006c79e2e9f1989fbdd1d0\",\"urls\":[\"bzz-raw://de802392d4ad8b81df4f0dd2cb764dbcbaf884e438dc445bdd737adc79546200\",\"dweb:/ipfs/QmcpGcjca9waLzbgbNKKjfs8aL3GkCo5vkiKCFo4633fV9\"]},\"/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/lifecycle/UpgradablePausable.sol\":{\"keccak256\":\"0x33298bd5b9d2e7922908fd3aea7d0790155bb4488560df6c729b726fffffcee3\",\"urls\":[\"bzz-raw://2e9a1c5f0b8a271fe31b91a85daf1855965ac9e44d49db52bbff8a4c728d57b4\",\"dweb:/ipfs/QmbePxmLF5coiGmYx1nD7q35ptEqJ6JEpGgAcaBvDVEUfU\"]}},\"version\":1}",
  "bytecode": "0x6080604052610b7c806100136000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ef8d66d1161005b5780636ef8d66d1461010a57806382dc1ec4146101145780638456cb5914610158578063c4d66de8146101625761007d565b80633f4ba83a1461008257806346fbf68e1461008c5780635c975abb146100e8575b600080fd5b61008a6101a6565b005b6100ce600480360360208110156100a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610314565b604051808215151515815260200191505060405180910390f35b6100f0610331565b604051808215151515815260200191505060405180910390f35b610112610348565b005b6101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035a565b005b6101606103cb565b005b6101a46004803603602081101561017857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061053a565b005b6101b66101b161065e565b610314565b61020b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b603460009054906101000a900460ff1661028d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000603460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6102d161065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061032a82603361066690919063ffffffff16565b9050919050565b6000603460009054906101000a900460ff16905090565b61035861035361065e565b610744565b565b61036a61036561065e565b610314565b6103bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b6103c88161079e565b50565b6103db6103d661065e565b610314565b610430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b603460009054906101000a900460ff16156104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001603460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586104f761065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff168061055957506105586107f8565b5b8061057057506000809054906101000a900460ff16155b6105c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ad66028913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610615576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61061e82610809565b6000603460006101000a81548160ff021916908315150217905550801561065a5760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b266022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61075881603361092090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6107b28160336109fa90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080303b90506000811491505090565b600060019054906101000a900460ff168061082857506108276107f8565b5b8061083f57506000809054906101000a900460ff16155b610894576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ad66028913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156108e4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108ed82610314565b6108fb576108fa8261079e565b5b801561091c5760008060016101000a81548160ff0219169083151502179055505b5050565b61092a8282610666565b61099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526f6c65733a206163636f756e7420646f65736e2774206861766520726f6c6581525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610a048282610666565b15610a77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe436f6e747261637420696e7374616e636520697320616c726561647920696e697469616c697a6564506175736572526f6c653a2063616c6c657220646f65736e277420686176652074686520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a7231582053c97c359bcbb46922e984dddaa2a248b743fcc8962a7cbdaa76a8a1d6c56f9b64736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ef8d66d1161005b5780636ef8d66d1461010a57806382dc1ec4146101145780638456cb5914610158578063c4d66de8146101625761007d565b80633f4ba83a1461008257806346fbf68e1461008c5780635c975abb146100e8575b600080fd5b61008a6101a6565b005b6100ce600480360360208110156100a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610314565b604051808215151515815260200191505060405180910390f35b6100f0610331565b604051808215151515815260200191505060405180910390f35b610112610348565b005b6101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035a565b005b6101606103cb565b005b6101a46004803603602081101561017857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061053a565b005b6101b66101b161065e565b610314565b61020b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b603460009054906101000a900460ff1661028d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000603460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6102d161065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061032a82603361066690919063ffffffff16565b9050919050565b6000603460009054906101000a900460ff16905090565b61035861035361065e565b610744565b565b61036a61036561065e565b610314565b6103bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b6103c88161079e565b50565b6103db6103d661065e565b610314565b610430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610afe6028913960400191505060405180910390fd5b603460009054906101000a900460ff16156104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001603460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586104f761065e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff168061055957506105586107f8565b5b8061057057506000809054906101000a900460ff16155b6105c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ad66028913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610615576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61061e82610809565b6000603460006101000a81548160ff021916908315150217905550801561065a5760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b266022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61075881603361092090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6107b28160336109fa90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080303b90506000811491505090565b600060019054906101000a900460ff168061082857506108276107f8565b5b8061083f57506000809054906101000a900460ff16155b610894576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ad66028913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156108e4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108ed82610314565b6108fb576108fa8261079e565b5b801561091c5760008060016101000a81548160ff0219169083151502179055505b5050565b61092a8282610666565b61099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526f6c65733a206163636f756e7420646f65736e2774206861766520726f6c6581525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610a048282610666565b15610a77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe436f6e747261637420696e7374616e636520697320616c726561647920696e697469616c697a6564506175736572526f6c653a2063616c6c657220646f65736e277420686176652074686520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a7231582053c97c359bcbb46922e984dddaa2a248b743fcc8962a7cbdaa76a8a1d6c56f9b64736f6c63430005110032",
  "sourceMap": "581:1591:71:-;;;;;;;;;",
  "deployedSourceMap": "581:1591:71:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:1591:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:117;;;:::i;:::-;;634:107:70;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;634:107:70;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1291:76:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;843:77:70;;;:::i;:::-;;747:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;747:90:70;;;;;;;;;;;;;;;;;;;:::i;:::-;;1848:115:71;;;:::i;:::-;;1059:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1059:137:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;2053:117;543:22:70;552:12;:10;:12::i;:::-;543:8;:22::i;:::-;535:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:7:71;;;;;;;;;;;1703:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:5;2111:7;;:15;;;;;;;;;;;;;;;;;;2141:22;2150:12;:10;:12::i;:::-;2141:22;;;;;;;;;;;;;;;;;;;;;;2053:117::o;634:107:70:-;690:4;713:21;726:7;713:8;:12;;:21;;;;:::i;:::-;706:28;;634:107;;;:::o;1291:76:71:-;1330:4;1353:7;;;;;;;;;;;1346:14;;1291:76;:::o;843:77:70:-;886:27;900:12;:10;:12::i;:::-;886:13;:27::i;:::-;843:77::o;747:90::-;543:22;552:12;:10;:12::i;:::-;543:8;:22::i;:::-;535:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:19;822:7;811:10;:19::i;:::-;747:90;:::o;1848:115:71:-;543:22:70;552:12;:10;:12::i;:::-;543:8;:22::i;:::-;535:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:7:71;;;;;;;;;;;1519:8;1511:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:4;1907:7;;:14;;;;;;;;;;;;;;;;;;1936:20;1943:12;:10;:12::i;:::-;1936:20;;;;;;;;;;;;;;;;;;;;;;1848:115::o;1059:137::-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:19;1146:12;;;;;;;;;;;1145:13;1123:35;;1168:14;1164:80;;;1207:4;1192:12;;:19;;;;;;;;;;;;;;;;;;1233:4;1219:11;;:18;;;;;;;;;;;;;;;;;;1164:80;1124:39:71;1156:6;1124:31;:39::i;:::-;1184:5;1174:7;;:15;;;;;;;;;;;;;;;;;;1262:14:69;1258:55;;;1301:5;1286:12;;:20;;;;;;;;;;;;;;;;;;1258:55;1059:137:71;;:::o;788:96:49:-;833:15;867:10;860:17;;788:96;:::o;778:200:50:-;850:4;893:1;874:21;;:7;:21;;;;866:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:4;:11;;:20;963:7;951:20;;;;;;;;;;;;;;;;;;;;;;;;;944:27;;778:200;;;;:::o;1051:127:70:-;1110:24;1126:7;1110:8;:15;;:24;;;;:::i;:::-;1163:7;1149:22;;;;;;;;;;;;1051:127;:::o;926:119::-;982:21;995:7;982:8;:12;;:21;;;;:::i;:::-;1030:7;1018:20;;;;;;;;;;;;926:119;:::o;1403:467:69:-;1450:4;1791:10;1836:7;1824:20;1818:26;;1864:1;1858:2;:7;1851:14;;;1403:467;:::o;360:137:70:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:19;1146:12;;;;;;;;;;;1145:13;1123:35;;1168:14;1164:80;;;1207:4;1192:12;;:19;;;;;;;;;;;;;;;;;;1233:4;1219:11;;:18;;;;;;;;;;;;;;;;;;1164:80;430:16:70;439:6;430:8;:16::i;:::-;425:66;;462:18;473:6;462:10;:18::i;:::-;425:66;1262:14:69;1258:55;;;1301:5;1286:12;;:20;;;;;;;;;;;;;;;;;;1258:55;360:137:70;;:::o;510:179:50:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:5;654:4;:11;;:20;666:7;654:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:179;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Initializable.sol\";\n\nimport \"../../GSN/Context.sol\";\nimport \"../access/roles/UpgradablePauserRole.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\ncontract UpgradablePausable is Initializable, Context, UpgradablePauserRole {\n    /**\n     * @dev Emitted when the pause is triggered by a pauser (`account`).\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by a pauser (`account`).\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state. Assigns the Pauser role\n     * to the deployer.\n     */\n    function initialize(address sender) public initializer {\n        UpgradablePauserRole.initialize(sender);\n\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(_paused, \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Called by a pauser to pause, triggers stopped state.\n     */\n    function pause() public onlyPauser whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Called by a pauser to unpause, returns to normal state.\n     */\n    function unpause() public onlyPauser whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n",
  "sourcePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/lifecycle/UpgradablePausable.sol",
  "ast": {
    "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/lifecycle/UpgradablePausable.sol",
    "exportedSymbols": {
      "UpgradablePausable": [
        15834
      ]
    },
    "id": 15835,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15735,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:71"
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 15736,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 15615,
        "src": "25:30:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 15737,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 12129,
        "src": "57:31:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/access/roles/UpgradablePauserRole.sol",
        "file": "../access/roles/UpgradablePauserRole.sol",
        "id": 15738,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 15734,
        "src": "89:50:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15739,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15614,
              "src": "612:13:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15614",
                "typeString": "contract Initializable"
              }
            },
            "id": 15740,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15741,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12128,
              "src": "627:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$12128",
                "typeString": "contract Context"
              }
            },
            "id": 15742,
            "nodeType": "InheritanceSpecifier",
            "src": "627:7:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15743,
              "name": "UpgradablePauserRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15733,
              "src": "636:20:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradablePauserRole_$15733",
                "typeString": "contract UpgradablePauserRole"
              }
            },
            "id": 15744,
            "nodeType": "InheritanceSpecifier",
            "src": "636:20:71"
          }
        ],
        "contractDependencies": [
          12128,
          15614,
          15733
        ],
        "contractKind": "contract",
        "documentation": "@dev Contract module which allows children to implement an emergency stop\nmechanism that can be triggered by an authorized account.\n * This module is used through inheritance. It will make available the\nmodifiers `whenNotPaused` and `whenPaused`, which can be applied to\nthe functions of your contract. Note that they will not be pausable by\nsimply including this module, only once the modifiers are put in place.",
        "fullyImplemented": true,
        "id": 15834,
        "linearizedBaseContracts": [
          15834,
          15733,
          12128,
          15614
        ],
        "name": "UpgradablePausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is triggered by a pauser (`account`).",
            "id": 15748,
            "name": "Paused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15746,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 15748,
                  "src": "765:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "764:17:71"
            },
            "src": "752:30:71"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is lifted by a pauser (`account`).",
            "id": 15752,
            "name": "Unpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15750,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 15752,
                  "src": "889:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "888:17:71"
            },
            "src": "874:32:71"
          },
          {
            "constant": false,
            "id": 15754,
            "name": "_paused",
            "nodeType": "VariableDeclaration",
            "scope": 15834,
            "src": "912:20:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15753,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "912:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 15771,
              "nodeType": "Block",
              "src": "1114:82:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15764,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15756,
                        "src": "1156:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15761,
                        "name": "UpgradablePauserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15733,
                        "src": "1124:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UpgradablePauserRole_$15733_$",
                          "typeString": "type(contract UpgradablePauserRole)"
                        }
                      },
                      "id": 15763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15654,
                      "src": "1124:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:39:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15766,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:39:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15767,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "1174:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 15768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1184:5:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1174:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15770,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:15:71"
                }
              ]
            },
            "documentation": "@dev Initializes the contract in unpaused state. Assigns the Pauser role\nto the deployer.",
            "id": 15772,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15759,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15758,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15595,
                  "src": "1102:11:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1102:11:71"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15756,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 15772,
                  "src": "1079:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:16:71"
            },
            "returnParameters": {
              "id": 15760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1114:0:71"
            },
            "scope": 15834,
            "src": "1059:137:71",
            "stateMutability": "nonpayable",
            "superFunction": 15654,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15779,
              "nodeType": "Block",
              "src": "1336:31:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15777,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15754,
                    "src": "1353:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15776,
                  "id": 15778,
                  "nodeType": "Return",
                  "src": "1346:14:71"
                }
              ]
            },
            "documentation": "@dev Returns true if the contract is paused, and false otherwise.",
            "id": 15780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:71"
            },
            "returnParameters": {
              "id": 15776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1330:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1329:6:71"
            },
            "scope": 15834,
            "src": "1291:76:71",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15789,
              "nodeType": "Block",
              "src": "1501:65:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1519:8:71",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 15783,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15754,
                          "src": "1520:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 15785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1529:18:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 15782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16037,
                        16038
                      ],
                      "referencedDeclaration": 16038,
                      "src": "1511:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:37:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15787,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:37:71"
                },
                {
                  "id": 15788,
                  "nodeType": "PlaceholderStatement",
                  "src": "1558:1:71"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 15790,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:2:71"
            },
            "src": "1476:90:71",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15798,
              "nodeType": "Block",
              "src": "1693:68:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15793,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15754,
                        "src": "1711:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 15794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:22:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 15792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16037,
                        16038
                      ],
                      "referencedDeclaration": 16038,
                      "src": "1703:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:40:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15796,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:40:71"
                },
                {
                  "id": 15797,
                  "nodeType": "PlaceholderStatement",
                  "src": "1753:1:71"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 15799,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:2:71"
            },
            "src": "1671:90:71",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15815,
              "nodeType": "Block",
              "src": "1897:66:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15806,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "1907:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 15807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1917:4:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1907:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15809,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:14:71"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15811,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12116,
                          "src": "1943:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 15812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15810,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15748,
                      "src": "1936:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:20:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15814,
                  "nodeType": "EmitStatement",
                  "src": "1931:25:71"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to pause, triggers stopped state.",
            "id": 15816,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15801,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15666,
                  "src": "1872:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1872:10:71"
              },
              {
                "arguments": null,
                "id": 15804,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15803,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15790,
                  "src": "1883:13:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1883:13:71"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1862:2:71"
            },
            "returnParameters": {
              "id": 15805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:0:71"
            },
            "scope": 15834,
            "src": "1848:115:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15832,
              "nodeType": "Block",
              "src": "2101:69:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15823,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "2111:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 15824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2121:5:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2111:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15826,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:15:71"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15828,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12116,
                          "src": "2150:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 15829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15827,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15752,
                      "src": "2141:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15831,
                  "nodeType": "EmitStatement",
                  "src": "2136:27:71"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to unpause, returns to normal state.",
            "id": 15833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15818,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15666,
                  "src": "2079:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2079:10:71"
              },
              {
                "arguments": null,
                "id": 15821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15820,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15799,
                  "src": "2090:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2090:10:71"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:2:71"
            },
            "returnParameters": {
              "id": 15822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:0:71"
            },
            "scope": 15834,
            "src": "2053:117:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15835,
        "src": "581:1591:71"
      }
    ],
    "src": "0:2173:71"
  },
  "legacyAST": {
    "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/lifecycle/UpgradablePausable.sol",
    "exportedSymbols": {
      "UpgradablePausable": [
        15834
      ]
    },
    "id": 15835,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15735,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:71"
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/Initializable.sol",
        "file": "../Initializable.sol",
        "id": 15736,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 15615,
        "src": "25:30:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 15737,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 12129,
        "src": "57:31:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pooh/sovryn/deploy_bridge/MAIN-Restore-RSK-ETH/Bridge-SC/sovryn-token-bridge/bridge/contracts/zeppelin/upgradable/access/roles/UpgradablePauserRole.sol",
        "file": "../access/roles/UpgradablePauserRole.sol",
        "id": 15738,
        "nodeType": "ImportDirective",
        "scope": 15835,
        "sourceUnit": 15734,
        "src": "89:50:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15739,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15614,
              "src": "612:13:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15614",
                "typeString": "contract Initializable"
              }
            },
            "id": 15740,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15741,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12128,
              "src": "627:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$12128",
                "typeString": "contract Context"
              }
            },
            "id": 15742,
            "nodeType": "InheritanceSpecifier",
            "src": "627:7:71"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15743,
              "name": "UpgradablePauserRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15733,
              "src": "636:20:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradablePauserRole_$15733",
                "typeString": "contract UpgradablePauserRole"
              }
            },
            "id": 15744,
            "nodeType": "InheritanceSpecifier",
            "src": "636:20:71"
          }
        ],
        "contractDependencies": [
          12128,
          15614,
          15733
        ],
        "contractKind": "contract",
        "documentation": "@dev Contract module which allows children to implement an emergency stop\nmechanism that can be triggered by an authorized account.\n * This module is used through inheritance. It will make available the\nmodifiers `whenNotPaused` and `whenPaused`, which can be applied to\nthe functions of your contract. Note that they will not be pausable by\nsimply including this module, only once the modifiers are put in place.",
        "fullyImplemented": true,
        "id": 15834,
        "linearizedBaseContracts": [
          15834,
          15733,
          12128,
          15614
        ],
        "name": "UpgradablePausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is triggered by a pauser (`account`).",
            "id": 15748,
            "name": "Paused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15746,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 15748,
                  "src": "765:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "764:17:71"
            },
            "src": "752:30:71"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is lifted by a pauser (`account`).",
            "id": 15752,
            "name": "Unpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15750,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 15752,
                  "src": "889:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "888:17:71"
            },
            "src": "874:32:71"
          },
          {
            "constant": false,
            "id": 15754,
            "name": "_paused",
            "nodeType": "VariableDeclaration",
            "scope": 15834,
            "src": "912:20:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15753,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "912:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 15771,
              "nodeType": "Block",
              "src": "1114:82:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15764,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15756,
                        "src": "1156:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15761,
                        "name": "UpgradablePauserRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15733,
                        "src": "1124:20:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UpgradablePauserRole_$15733_$",
                          "typeString": "type(contract UpgradablePauserRole)"
                        }
                      },
                      "id": 15763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15654,
                      "src": "1124:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:39:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15766,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:39:71"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15767,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "1174:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 15768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1184:5:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1174:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15770,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:15:71"
                }
              ]
            },
            "documentation": "@dev Initializes the contract in unpaused state. Assigns the Pauser role\nto the deployer.",
            "id": 15772,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15759,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15758,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15595,
                  "src": "1102:11:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1102:11:71"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15756,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 15772,
                  "src": "1079:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:16:71"
            },
            "returnParameters": {
              "id": 15760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1114:0:71"
            },
            "scope": 15834,
            "src": "1059:137:71",
            "stateMutability": "nonpayable",
            "superFunction": 15654,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15779,
              "nodeType": "Block",
              "src": "1336:31:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15777,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15754,
                    "src": "1353:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15776,
                  "id": 15778,
                  "nodeType": "Return",
                  "src": "1346:14:71"
                }
              ]
            },
            "documentation": "@dev Returns true if the contract is paused, and false otherwise.",
            "id": 15780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:2:71"
            },
            "returnParameters": {
              "id": 15776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15780,
                  "src": "1330:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1329:6:71"
            },
            "scope": 15834,
            "src": "1291:76:71",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15789,
              "nodeType": "Block",
              "src": "1501:65:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1519:8:71",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 15783,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15754,
                          "src": "1520:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 15785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1529:18:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 15782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16037,
                        16038
                      ],
                      "referencedDeclaration": 16038,
                      "src": "1511:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:37:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15787,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:37:71"
                },
                {
                  "id": 15788,
                  "nodeType": "PlaceholderStatement",
                  "src": "1558:1:71"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 15790,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:2:71"
            },
            "src": "1476:90:71",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15798,
              "nodeType": "Block",
              "src": "1693:68:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15793,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15754,
                        "src": "1711:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 15794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:22:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 15792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16037,
                        16038
                      ],
                      "referencedDeclaration": 16038,
                      "src": "1703:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:40:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15796,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:40:71"
                },
                {
                  "id": 15797,
                  "nodeType": "PlaceholderStatement",
                  "src": "1753:1:71"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 15799,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:2:71"
            },
            "src": "1671:90:71",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15815,
              "nodeType": "Block",
              "src": "1897:66:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15806,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "1907:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 15807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1917:4:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1907:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15809,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:14:71"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15811,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12116,
                          "src": "1943:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 15812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15810,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15748,
                      "src": "1936:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:20:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15814,
                  "nodeType": "EmitStatement",
                  "src": "1931:25:71"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to pause, triggers stopped state.",
            "id": 15816,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15802,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15801,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15666,
                  "src": "1872:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1872:10:71"
              },
              {
                "arguments": null,
                "id": 15804,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15803,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15790,
                  "src": "1883:13:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1883:13:71"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1862:2:71"
            },
            "returnParameters": {
              "id": 15805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:0:71"
            },
            "scope": 15834,
            "src": "1848:115:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15832,
              "nodeType": "Block",
              "src": "2101:69:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 15823,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15754,
                      "src": "2111:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 15824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2121:5:71",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2111:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15826,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:15:71"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 15828,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12116,
                          "src": "2150:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 15829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 15827,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15752,
                      "src": "2141:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15831,
                  "nodeType": "EmitStatement",
                  "src": "2136:27:71"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to unpause, returns to normal state.",
            "id": 15833,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 15819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15818,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15666,
                  "src": "2079:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2079:10:71"
              },
              {
                "arguments": null,
                "id": 15821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15820,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15799,
                  "src": "2090:10:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2090:10:71"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:2:71"
            },
            "returnParameters": {
              "id": 15822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:0:71"
            },
            "scope": 15834,
            "src": "2053:117:71",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15835,
        "src": "581:1591:71"
      }
    ],
    "src": "0:2173:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2021-04-27T19:12:41.274Z",
  "devdoc": {
    "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. * This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
    "methods": {
      "initialize(address)": {
        "details": "Initializes the contract in unpaused state. Assigns the Pauser role to the deployer."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}